`timescale 1ns / 1ps

/////////////////////////////////////////////// WAR10CK \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//                                                                                                          \\
//                                            , ,###*.                                                      \\
//                                       /&@@@@@@@@@@@@@@@@@@&                                              \\
//                                     @@@@%@@@@@@@@@*@@@@@@@@@@@                                           \\
//                                      @@@@(@@@@@@@@&@@@@@@@@@@&*/                                         \\
//                                        @@@@@@@@@@@@@@@@&@@@@*@(@@@                                       \\
//                                          (@@&@@@@,@@@%,@@@@(@&@@@@@,                                     \\
//                                            (@##&@%/@@(@@@@(@@@@@@@@@@                                    \\
//                                             ##@@@@@@@&(%@*@@@@@@@@*@@@@                                  \\
//                                              @@@@@@@@@@@@@(/@@@@&@@@@@@@                                 \\
//                                              @@@@@@@@@@@@@@@@%/(@@@@/@@@@@                               \\
//                                             @(&@@@@@@@@&(@@@@@@/#@(@@@@@@@@                              \\
//                                            @@@@@@@@@@@@@@@@@%@@@@@@@@@&&@@@&                             \\
//                                          @@@@@@@@@@@@@@@@@@@@@*@@@#,@@@@@@# &                            \\
//                                        @@@@@@@@@@@@@@@@@@@@@@@@@@@@/#@@@@@@@@                            \\
//                                       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@*@@@@/                           \\
//                                      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&/@@@@@@@@                           \\
//                                      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                           \\
//                                      (@//@*@@@@@@@@@@@@@@@@@@@@@@@#@@@#@@@@@@@                           \\
//                                     ,@@@@@@/#@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@(                           \\
//                                     (@@#@@@@@%*@@@@@@@@@@@@@@@@@@@@@@#,,***//@                           \\
//                                     , @@@#/@@@@##@@@@@@@@@@@@@@@@@@@/&@@@@@@@&                           \\
//                                    ( &@@@@(/@@@@@(@@@@@@@//@@@@@@# ,@@@@@@@@@/                           \\
//                                   .&@@@(%@@@@@@@@@@@@@@(%@@@*@@@@  @@@@@@@@@.                            \\
//                                   @/@@@@@@@@@@@@@@@@@@%/@@@@@@@@@  @@@@@@@@                              \\
//                                   @@@@@@@@@@@@@@@@@@@@@#%@@@@(@%@, *%@@@@@                               \\
//                                  @&@@@@@@@@@@@@@@@@&@@    .&(@@@#@.@@@@@@                                \\
//                                  @%@@@@@@@@@@@@@%@@             &@/,@@@@,                                \\
//                                 &&@@@@@@@@@@@@&@                   @@@&@                                 \\
//                                 @%@@@@@@@@@&&                      &@@@@                                 \\
//                                *%@@@@@@@@#                          @@@@                                 \\
//                                @/@@@@@/                             #@@@                                 \\
//                                 @@*%                                 @@@                                 \\
//                                 @                                     @@*                                \\
//                                                                        @@                                \\
//                                                                         @@                               \\
//                                                                          &                               \\
//                                                                                                          \\
//                                                                                            ,--.          \\
//                    .---.   ,---,       ,-.----.       ,---,    ,----..     ,----..     ,--/  /|          \\
//                   /. ./|  '  .' \      \    /  \   ,`--.' |   /   /   \   /   /   \ ,---,': / '          \\
//               .--'.  ' ; /  ;    '.    ;   :    \ /    /  :  /   .     : |   :     ::   : '/ /           \\
//              /__./ \ : |:  :       \   |   | .\ ::    |.' ' .   /   ;.  \.   |  ;. /|   '   ,            \\
//          .--'.  '   \' .:  |   /\   \  .   : |: |`----':  |.   ;   /  ` ;.   ; /--` '   |  /             \\
//         /___/ \ |    ' '|  :  ' ;.   : |   |  \ :   '   ' ;;   |  ; \ ; |;   | ;    |   ;  ;             \\
//         \   \  \;      :|  |  ;/  \   \|   : .  /   |   | ||   :  | ; | '|   : |    :   '   \            \\
//          \   ;  `      |'  :  | \  \ ,';   | |  \   '   : ;.   |  ' ' ' :.   | '___ |   |    '           \\
//           .   \    .\  ;|  |  '  '--'  |   | ;\  \  |   | ''   ;  \; /  |'   ; : .'|'   : |.  \          \\
//            \   \   ' \ ||  :  :        :   ' | \.'  '   : | \   \  ',  / '   | '/  :|   | '_\.'          \\
//             :   '  |--" |  | ,'        :   : :-'    ;   |.'  ;   :    /  |   :    / '   : |              \\
//              \   \ ;    `--''          |   |.'      '---'     \   \ .'    \   \ .'  ;   |,'              \\
//               '---"                    `---'                   `---`       `---`    '---'                \\
//                                                                                                          \\
//              Create Date      : 07.07.2019                                                               \\
//              Module Name      : DelayHandler                                                             \\
//              Target Devices   : Target Agnostic                                                          \\
//              Author           : WAR10CK                                                                  \\
//              Description      : This core calculates and applies delays                                  \\
//                                                                                                          \\
//                                                                                                          \\
//                                                                                                          \\
//              Update Date      : 07.07.2019                                                               \\
//              Status           : Development                                                              \\
//              Notes            :                                                                          \\
//                                                                                                          \\
//                                                                                                          \\
//                                                                                                          \\
/////////////////////////////////////////////// WAR10CK \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

module DelayHandler
(
  IN_CLOCK                                                                                  ,
  IN_RESET_N                                                                                ,
  IN_START                                                                                  ,
  IN_CANCEL                                                                                 ,
  IN_COUNTER_VAL                                                                            ,
  OUT_IRQ                                                                                   
);

input                               IN_CLOCK                                                ; // Clock
input                               IN_RESET_N                                              ; // 0 For Reset, 1 For No-Reset
input                               IN_START                                                ; // Starter
input                               IN_CANCEL                                               ; // Cancel
input           [31:0]              IN_COUNTER_VAL                                          ; // Counter Value + 3 CLOCK?
output                              OUT_IRQ                                                 ; // Output

reg             [31:0]              counter_r                                               ;
reg                                 start_r                                                 ;
reg                                 start_r_d0                                              ;
reg                                 go_r                                                    ;
reg                                 done_r                                                  ;

// Rising Edge Catcher
always @ (posedge IN_CLOCK) begin
  start_r                                           <= IN_START                             ;
  start_r_d0                                        <= start_r                              ;
end

// Capture Start
always @ (posedge IN_CLOCK) begin
  if ((!IN_RESET_N) | (IN_CANCEL)) begin
    go_r                                            <= 1'b0                                 ;
  end
  else begin
    if ((start_r == 1'b1) & (start_r_d0 == 1'b0)) begin
      go_r                                          <= 1'b1                                 ;
    end
    else if (counter_r == IN_COUNTER_VAL) begin
      go_r                                          <= 1'b0                                 ;
    end
    else begin
      go_r                                          <= go_r                                 ;
    end
  end
end

// Start Timer
always @ (posedge IN_CLOCK) begin
  if ((!IN_RESET_N) | (IN_CANCEL)) begin
    counter_r                                       <= 32'h00000000                         ;
    done_r                                          <= 1'b0                                 ;
  end
  else begin
    if (go_r == 1'b1) begin
      if (counter_r != IN_COUNTER_VAL) begin
        counter_r                                   <= counter_r + 1'b1                     ;
        done_r                                      <= 1'b0                                 ;
      end
      else begin
        counter_r                                   <= counter_r                            ;
        done_r                                      <= 1'b1                                 ;
      end
    end
    else begin
      counter_r                                     <= 32'h00000000                         ;
      done_r                                        <= 1'b0                                 ;
    end
  end
end

assign OUT_IRQ                                      = done_r                                ;

endmodule
